# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: Python application

on:
  push:
    branches:
      - main
      - testing_tags
  pull_request:
    branches: 
      - main
      - testing_tags

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      counterfit:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
        env:
          discovery.type: single-node
        # These options act as a ping to check the service has started, we probably don't need them.
        # We need to select a container with python on and install counterfit onto it and push to a public registry.
        options: >-
          --health-cmd "curl http://localhost:9200/_cluster/health" 
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        ports:
        # <port on host>:<port on container>
        # Counterfit will be 5000:5000
        - 9200:9200
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        docker ps
        sleep 60
        curl -X GET http://localhost:9200/
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 --max-complexity 10 . --count --select=E9,F63,F7,F82 --show-source --statistics 
        # We break on any error and a McCabe Complexity of 10 or more. The GitHub editor is 127 chars wide so we override the default.
        flake8 . --count --max-complexity=10 --max-line-length=127 --show-source
    # - name: Test with pytest
    #   run: |
    #     pytest
    # - name: Create tag
      # uses: actions/github-script@v3
      # with:
      #   github-token: ${{ github.token }}
      #   script: |
      #     # github.git.createRef({
      #     #   owner: context.repo.owner,
      #     #   repo: context.repo.repo,
      #     #   ref: "refs/tags/tagname",
      #     #   sha: context.sha
      #     # })
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        PRERELEASE_SUFFIX:
